"use strict";(self.webpackChunksite_docusaurus_template=self.webpackChunksite_docusaurus_template||[]).push([[4255],{6252:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>j,frontMatter:()=>o,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"sorting-algorithms/insertion-sort","title":"Insertion Sort","description":"Insertion sort is a comparison-based sorting algorithm that builds the final sorted array one element at a time by inserting each element into its correct position within the already sorted portion of the array.","source":"@site/docs/01-sorting-algorithms/insertion-sort.md","sourceDirName":"01-sorting-algorithms","slug":"/sorting-algorithms/insertion-sort","permalink":"/2023/notes/sorting-algorithms/insertion-sort","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Bubble Sort","permalink":"/2023/notes/sorting-algorithms/bubble-sort"},"next":{"title":"Week 2: Analysing Programs","permalink":"/2023/notes/category/week-2-analysing-programs"}}');var t=n(74848),a=n(28453),r=n(28548),l=n(13358),h=n(53833);const o={sidebar_position:2},c="Insertion Sort",d={},m=[{value:"Goals",id:"goals",level:3},{value:"Test case",id:"test-case",level:2},{value:"Design of Algorithm",id:"design-of-algorithm",level:2},{value:"Outer and Inner Iteration",id:"outer-and-inner-iteration",level:3},{value:"Fixed Outer Iteration",id:"fixed-outer-iteration",level:3},{value:"Non-Fixed Inner Iteration",id:"non-fixed-inner-iteration",level:3},{value:"Insertion Sort v1",id:"insertion-sort-v1",level:3},{value:"Optimised Insertion Sort",id:"optimised-insertion-sort",level:2},{value:"Test Case",id:"test-case-1",level:3},{value:"Insertion Sort v2",id:"insertion-sort-v2",level:3}];function x(e){const s={admonition:"admonition",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"insertion-sort",children:"Insertion Sort"})}),"\n",(0,t.jsx)(h.A,{}),"\n",(0,t.jsx)(s.p,{children:"Insertion sort is a comparison-based sorting algorithm that builds the final sorted array one element at a time by inserting each element into its correct position within the already sorted portion of the array."}),"\n",(0,t.jsx)(s.h3,{id:"goals",children:"Goals"}),"\n",(0,t.jsx)(s.p,{children:"By the end of this lesson, you should be able to:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Describe the ",(0,t.jsx)(s.strong,{children:"insertion sort"})," algorithm and ways to optimize it."]}),"\n",(0,t.jsxs)(s.li,{children:["Implement the insertion sort algorithm to ",(0,t.jsx)(s.strong,{children:"sort"})," a sequence of numbers."]}),"\n"]}),"\n",(0,t.jsx)(s.admonition,{title:"Keywords",type:"keyword",children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"sorting"}),", ",(0,t.jsx)(s.code,{children:"insertion sort"})]})}),"\n",(0,t.jsx)(s.p,{children:"Insertion sort is another algorithm that solves the same problem as bubble sort. Let's start by looking at the same test case."}),"\n",(0,t.jsx)(s.h2,{id:"test-case",children:"Test case"}),"\n",(0,t.jsx)(s.p,{children:"Given the following input:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"# Python Code\nnumbers = [16, 14, 10, 8, 7, 8, 3, 2, 4, 1]\n"})}),"\n",(0,t.jsx)(s.p,{children:"We want to write some steps that sort the numbers such that the output will be:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"[1, 2, 3, 4, 7, 8, 8, 10, 14, 16]\n"})}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["We start from the ",(0,t.jsx)(s.em,{children:"second"})," element in the list, i.e. 14."]}),"\n",(0,t.jsxs)(s.p,{children:["[16, ",(0,t.jsx)(s.strong,{children:"14"}),", 10, 8, 7, 8, 3, 2, 4, 1]"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["We then compare that number with the one on the left. If it is smaller, then we will swap. Since ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mn,{children:"14"}),(0,t.jsx)(s.mo,{children:"<"}),(0,t.jsx)(s.mn,{children:"16"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"14<16"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,t.jsx)(s.span,{className:"mord",children:"14"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"<"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(s.span,{className:"mord",children:"16"})]})]})]}),", we do a swap."]}),"\n",(0,t.jsxs)(s.p,{children:["[",(0,t.jsx)(s.strong,{children:"14, 16"}),", 10, 8, 7, 8, 3, 2, 4, 1]"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Since 14 has reached its place, we now move to the ",(0,t.jsx)(s.em,{children:"third"})," element in the list, i.e. 10. Since ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mn,{children:"10"}),(0,t.jsx)(s.mo,{children:"<"}),(0,t.jsx)(s.mn,{children:"16"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"10 < 16"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,t.jsx)(s.span,{className:"mord",children:"10"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"<"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(s.span,{className:"mord",children:"16"})]})]})]}),", we swap (16, 10)."]}),"\n",(0,t.jsxs)(s.p,{children:["[14, ",(0,t.jsx)(s.strong,{children:"16, 10"}),", 8, 7, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[14, ",(0,t.jsx)(s.strong,{children:"10, 16"}),", 8, 7, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["Now we continue comparing 10 with the one on its left, i.e. 14. Since ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mn,{children:"10"}),(0,t.jsx)(s.mo,{children:"<"}),(0,t.jsx)(s.mn,{children:"14"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"10<14"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,t.jsx)(s.span,{className:"mord",children:"10"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"<"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(s.span,{className:"mord",children:"14"})]})]})]}),", we swap (14, 10)."]}),"\n",(0,t.jsxs)(s.p,{children:["[",(0,t.jsx)(s.strong,{children:"14, 10"}),", 16, 8, 7, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[",(0,t.jsx)(s.strong,{children:"10, 14"}),", 16, 8, 7, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsx)(s.p,{children:"Now 10 has reached its position."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["We now move to the ",(0,t.jsx)(s.em,{children:"fourth"})," element, i.e. 8, and compare it with the number on its left. Since ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mn,{children:"8"}),(0,t.jsx)(s.mo,{children:"<"}),(0,t.jsx)(s.mn,{children:"16"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"8 < 16"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,t.jsx)(s.span,{className:"mord",children:"8"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"<"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(s.span,{className:"mord",children:"16"})]})]})]}),", we swap (16, 8). We then continue swapping until 8 reaches its position."]}),"\n",(0,t.jsxs)(s.p,{children:["[10, 14, ",(0,t.jsx)(s.strong,{children:"16, 8"}),", 7, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[10, 14, ",(0,t.jsx)(s.strong,{children:"8, 16"}),", 7, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["[10, ",(0,t.jsx)(s.strong,{children:"14, 8"}),", 16, 7, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[10, ",(0,t.jsx)(s.strong,{children:"8, 14"}),", 16, 7, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["[",(0,t.jsx)(s.strong,{children:"10, 8"}),", 14, 16, 7, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[",(0,t.jsx)(s.strong,{children:"8, 10"}),", 14, 16, 7, 8, 3, 2, 4, 1]"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["We now move to the ",(0,t.jsx)(s.em,{children:"fifth"})," element, i.e. 7. We then have the same swapping all the way until 7 reaches its place."]}),"\n",(0,t.jsxs)(s.p,{children:["[8, 10, 14, ",(0,t.jsx)(s.strong,{children:"16, 7"}),", 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[8, 10, 14, ",(0,t.jsx)(s.strong,{children:"7, 16"}),", 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["[8, 10, ",(0,t.jsx)(s.strong,{children:"14, 7"}),", 16, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[8, 10, ",(0,t.jsx)(s.strong,{children:"7, 14"}),", 16, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["[8, ",(0,t.jsx)(s.strong,{children:"10, 7"}),", 14, 16, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[8, ",(0,t.jsx)(s.strong,{children:"7, 10"}),", 14, 16, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["[",(0,t.jsx)(s.strong,{children:"8, 7"}),", 10, 14, 16, 8, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[",(0,t.jsx)(s.strong,{children:"7, 8"}),", 10, 14, 16, 8, 3, 2, 4, 1]"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["We now move to the ",(0,t.jsx)(s.em,{children:"sixth"})," element, i.e. 8. We will continue swapping until 8 encounters another 8 in the 2nd element. At this point, the swapping will stop."]}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, 10, 14, ",(0,t.jsx)(s.strong,{children:"16, 8"}),", 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, 10, 14, ",(0,t.jsx)(s.strong,{children:"8, 16"}),", 3, 2, 4, 1]"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, 10, ",(0,t.jsx)(s.strong,{children:"14, 8"}),", 16, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, 10, ",(0,t.jsx)(s.strong,{children:"8, 14"}),", 16, 3, 2, 4, 1]"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, ",(0,t.jsx)(s.strong,{children:"10, 8"}),", 14, 16, 3, 2, 4, 1]"]}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, ",(0,t.jsx)(s.strong,{children:"8, 10"}),", 14, 16, 3, 2, 4, 1]"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["[7, ",(0,t.jsx)(s.strong,{children:"8, 8"}),", 10, 14, 16, 3, 2, 4, 1]"]}),"\n",(0,t.jsx)(s.p,{children:"no swapping occurs"}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["We can now move to the ",(0,t.jsx)(s.em,{children:"seventh"})," element, i.e. 3. We will not show the swapping steps, and only show the final position of the seventh element."]}),"\n",(0,t.jsxs)(s.p,{children:["[",(0,t.jsx)(s.strong,{children:"3"}),", 7, 8, 8, 10, 14, 16, 2, 4, 1]"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["We do the same with the ",(0,t.jsx)(s.em,{children:"eighth"})," element, i.e. 2."]}),"\n",(0,t.jsxs)(s.p,{children:["[",(0,t.jsx)(s.strong,{children:"2"}),", 3, 7, 8, 8, 10, 14, 16, 4, 1]"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Similarly, with the ",(0,t.jsx)(s.em,{children:"ninth"})," element, i.e. 4. However, this element will stop swapping when it sees the number lower than itself, so it will stop when it sees 3."]}),"\n",(0,t.jsxs)(s.p,{children:["[2, 3, ",(0,t.jsx)(s.strong,{children:"4"}),", 7, 8, 8, 10, 14, 16, 1]"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Finally, the ",(0,t.jsx)(s.em,{children:"tenth"})," element, i.e. 1, will move all the way to the first position."]}),"\n",(0,t.jsxs)(s.p,{children:["[",(0,t.jsx)(s.strong,{children:"1"}),", 2, 3, 4, 7, 8, 8, 10, 14, 16]"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"design-of-algorithm",children:"Design of Algorithm"}),"\n",(0,t.jsx)(s.p,{children:"Looking at the above case, we can try to write down our algorithm in pseudocode. Several things to note."}),"\n",(0,t.jsx)(s.h3,{id:"outer-and-inner-iteration",children:"Outer and Inner Iteration"}),"\n",(0,t.jsxs)(s.p,{children:["There are ",(0,t.jsx)(s.strong,{children:"two"})," iterations in the steps above:"]}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)("span",{style:{color:"red",fontWeight:"bold"},children:"outer"})," iteration is moving from the ",(0,t.jsx)("span",{children:(0,t.jsx)("i",{children:"second"})})," element to the last element in the list. What the outer iteration does is to place that n-th element into its position."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)("span",{style:{color:"red",fontWeight:"bold"},children:"inner"})," iteration is swapping the n-th element until either: a) it reaches the most left position, or b) the number on its left is smaller"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"fixed-outer-iteration",children:"Fixed Outer Iteration"}),"\n",(0,t.jsxs)(s.p,{children:["The number of ",(0,t.jsx)(s.em,{children:"outer"})," iterations is fixed at ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mi,{children:"n"}),(0,t.jsx)(s.mo,{children:"\u2212"}),(0,t.jsx)(s.mn,{children:"1"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"n-1"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(s.span,{className:"mord",children:"1"})]})]})]}),". This is because it starts from the second element to the last element. So if there are ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mi,{children:"n"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]})," elements, it will repeat itself ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mi,{children:"n"}),(0,t.jsx)(s.mo,{children:"\u2212"}),(0,t.jsx)(s.mn,{children:"1"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"n-1"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,t.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(s.span,{className:"mord",children:"1"})]})]})]})," times."]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.em,{children:"outer"})," iteration starts from the second element, which is index 1."]}),"\n",(0,t.jsx)(s.h3,{id:"non-fixed-inner-iteration",children:"Non-Fixed Inner Iteration"}),"\n",(0,t.jsxs)(s.p,{children:["The number of ",(0,t.jsx)(s.em,{children:"inner"})," iteration is not fixed since it depends on the two cases stated above. The ",(0,t.jsx)(s.strong,{children:"maximum"})," number of iteration is when the number reaches the left-most position. In this case for element at position ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mi,{children:"i"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6595em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"i"})]})})]}),", it will repeat ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mi,{children:"i"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6595em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"i"})]})})]})," times. If it sees a number that is smaller than itself, the number of iteration for the element at position ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mi,{children:"i"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6595em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"i"})]})})]})," will be less than ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mi,{children:"i"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6595em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"i"})]})})]}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"insertion-sort-v1",children:"Insertion Sort v1"}),"\n",(0,t.jsx)(s.p,{children:"Let's write it down."}),"\n",(0,t.jsx)(l.A,{title:"Show Pseudocode",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"Insertion Sort\nVersion: 1\nInput: array\nOutput: None, sort in place\nSteps:\n\n1. n = length of array\n2. For outer_index in Range(from 1 to n-1), do:\n   2.1 inner_index = outer_index # start with the i-th element\n   2.2 As long as (inner_index > 0) AND (array[inner_index] < array[inner_index - 1]), do:\n   2.2.1 swap(array[inner_index - 1], array[inner_index])\n   2.2.2 inner_index = inner_index - 1 # move to the left\n"})})}),"\n",(0,t.jsx)(s.h2,{id:"optimised-insertion-sort",children:"Optimised Insertion Sort"}),"\n",(0,t.jsxs)(s.p,{children:["We can improve the algorithm slightly by reducing the number of assignment in the inner loop. This means that instead of swapping and assigning elements in the ",(0,t.jsx)(s.em,{children:"inner"})," iteration, we only assign the element once it finds its final position. To do this, we store the element we are going to move into a temporary variable."]}),"\n",(0,t.jsx)(s.h3,{id:"test-case-1",children:"Test Case"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Let's illustrate this when the ",(0,t.jsx)(s.em,{children:"outer"})," iteration is moving the ",(0,t.jsx)(s.em,{children:"sixth"})," element, i.e. 8."]}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, 10, 14, 16, ",(0,t.jsx)(s.strong,{children:"8"}),", 3, 2, 4, 1]"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Instead of swapping (16, 8) pair, we store 8 into a temporary variable. Then we compare the temporary variable with 16. Since ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mn,{children:"8"}),(0,t.jsx)(s.mo,{children:"<"}),(0,t.jsx)(s.mn,{children:"16"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"8 < 16"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,t.jsx)(s.span,{className:"mord",children:"8"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"<"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(s.span,{className:"mord",children:"16"})]})]})]}),", we simply shift 16 to the right. We indicate the position to be replaced with an underscore below. Since no swap is being done, the old value remains after the shift."]}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, 10, 14, ",(0,t.jsx)(s.strong,{children:"16"}),", ",(0,t.jsx)(s.code,{children:"_8_"}),", 3, 2, 4, 1] , temporary = 8"]}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, 10, 14, ",(0,t.jsx)(s.code,{children:"_16_"}),", ",(0,t.jsx)(s.strong,{children:"16"}),", 3, 2, 4, 1] , temporary = 8"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["We then now compare, the temporary variable with 14. Since ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsxs)(s.mrow,{children:[(0,t.jsx)(s.mn,{children:"8"}),(0,t.jsx)(s.mo,{children:"<"}),(0,t.jsx)(s.mn,{children:"14"})]}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"8 < 14"})]})})}),(0,t.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6835em",verticalAlign:"-0.0391em"}}),(0,t.jsx)(s.span,{className:"mord",children:"8"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,t.jsx)(s.span,{className:"mrel",children:"<"}),(0,t.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,t.jsx)(s.span,{className:"mord",children:"14"})]})]})]}),", we shift 14 to the right."]}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, 10, ",(0,t.jsx)(s.strong,{children:"14"}),", ",(0,t.jsx)(s.code,{children:"_16_"}),", 16, 3, 2, 4, 1] , temporary = 8"]}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, 10, ",(0,t.jsx)(s.code,{children:"_14_"}),", ",(0,t.jsx)(s.strong,{children:"14"}),", 16, 3, 2, 4, 1] , temporary = 8"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"We do the same with 10."}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, ",(0,t.jsx)(s.strong,{children:"10"}),", ",(0,t.jsx)(s.code,{children:"_14_"}),", 14, 16, 3, 2, 4, 1] , temporary = 8"]}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, ",(0,t.jsx)(s.code,{children:"_10_"}),", ",(0,t.jsx)(s.strong,{children:"10"}),", 14, 16, 3, 2, 4, 1] , temporary = 8"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Now, we compare the temporary variable with 8. But since 8 is not less than the value in the temporary variable, we do not swap, and store the temporary value to element on the right of it. We can then stop the ",(0,t.jsx)(s.em,{children:"inner"})," iteration, and move to the next pass of ",(0,t.jsx)(s.em,{children:"outer"})," iteration."]}),"\n",(0,t.jsxs)(s.p,{children:["[7, ",(0,t.jsx)(s.strong,{children:"8"}),", ",(0,t.jsx)(s.code,{children:"_10_"}),", 10, 14, 16, 3, 2, 4, 1] , temporary = 8"]}),"\n",(0,t.jsxs)(s.p,{children:["[7, 8, ",(0,t.jsx)(s.strong,{children:"8"}),", 10, 14, 16, 3, 2, 4, 1] , temporary = 8"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"This is an animation example for a different sequence of numbers from Wikipedia."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:"https://upload.wikimedia.org/wikipedia/commons/9/9c/Insertion-sort-example.gif",alt:"Animation for Insertion Sort"})}),"\n",(0,t.jsx)(s.h3,{id:"insertion-sort-v2",children:"Insertion Sort v2"}),"\n",(0,t.jsx)(s.p,{children:"We can then modify the pseudocode as follows."}),"\n",(0,t.jsx)(l.A,{title:"Show Pseudocode",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"Insertion Sort\nVersion: 2\nInput: array\nOutput: None, sort in place\nSteps:\n1. n = length of array\n2. For outer_index in Range(from 1 to n-1), do:\n    2.1 inner_index = outer_index  # start with the i-th element\n    2.2 temporary = array[inner_index]\n    2.3 As long as (inner_index > 0) AND (temporary < array[inner_index - 1]), do:\n        2.3.1 array[inner_index] = array[inner_index - 1]) # shift to the right\n        2.3.2 inner_index = inner_index - 1  # move to the left\n    2.4 array[inner_index] = temporary # save temporary to its final position\n"})})}),"\n",(0,t.jsxs)(s.admonition,{title:"Note",type:"note",children:[(0,t.jsxs)(s.p,{children:["The additional step is on 2.2 where we store the ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mi,{children:"i"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6595em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",children:"i"})]})})]}),"-th element to a temporary variable."]}),(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Step 2.3 modifies the condition to compare the temporary variable with the element at ",(0,t.jsx)(s.code,{children:"inner_index - 1"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["Step 2.3.1 now only has ",(0,t.jsx)(s.strong,{children:"one"})," assignment instead of ",(0,t.jsx)(s.strong,{children:"two"}),"."]}),"\n"]}),(0,t.jsxs)(s.p,{children:["We only assign the temporary var to the final position in step 2.4. The position stored in 2.4 is ",(0,t.jsx)(s.code,{children:"inner_index"})," instead of ",(0,t.jsx)(s.code,{children:"inner_index - 1"}),". The reason is that in the last iteration, we have executed 2.3.2 which reduces the index by one."]}),(0,t.jsxs)(s.p,{children:["Assignment from temporary variable to the array only happens at the end of ",(0,t.jsx)(s.em,{children:"inner"})," iteration."]})]}),"\n",(0,t.jsx)(r.A,{title:"Question: What is the key difference between Bubble Sort and Insertion Sort? Which is more human?",children:(0,t.jsx)(s.p,{children:"Bubble Sort finds the n-th largest element on each pass and moves it to the end. Insertion Sort looks at the n-th element and moves it to the correct position. Humans typically use Insertion Sort intuitively when sorting, for example on a card deck."})})]})}function j(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}}}]);