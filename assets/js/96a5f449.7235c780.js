"use strict";(self.webpackChunksite_docusaurus_template=self.webpackChunksite_docusaurus_template||[]).push([[1795],{55828:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"advanced/forms","title":"Forms","description":"Flask has an extension that makes it easy to create web forms. WTForms is \u201ca flexible forms validation and rendering library for Python Web development.\u201d With Flask-WTF, we get WTForms in Flask. WTForms includes security features for submitting form data and submission validation techniques.","source":"@site/projects/advanced/forms.md","sourceDirName":"advanced","slug":"/advanced/forms","permalink":"/2023/projects/advanced/forms","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Bootstrap","permalink":"/2023/projects/advanced/bootstrap"},"next":{"title":"Checkoff","permalink":"/2023/projects/checkoff"}}');var t=n(74848),r=n(28453),l=(n(28548),n(13358),n(73627),n(53833));const o={sidebar_position:3},d="Forms",a={},c=[{value:"Pre-Requisite",id:"pre-requisite",level:3},{value:"Imports",id:"imports",level:2},{value:"Creating FlaskForm",id:"creating-flaskform",level:2},{value:"Rendering Web Form",id:"rendering-web-form",level:2},{value:"Hidden Fields",id:"hidden-fields",level:2},{value:"References",id:"references",level:2}];function h(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"forms",children:"Forms"})}),"\n",(0,t.jsx)(i.p,{children:"Flask has an extension that makes it easy to create web forms. WTForms is \u201ca flexible forms validation and rendering library for Python Web development.\u201d With Flask-WTF, we get WTForms in Flask. WTForms includes security features for submitting form data and submission validation techniques."}),"\n",(0,t.jsx)(l.A,{}),"\n",(0,t.jsx)(i.h3,{id:"pre-requisite",children:"Pre-Requisite"}),"\n",(0,t.jsx)(i.p,{children:"You need to go through the following tutorial before reading the notes:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-iii-web-forms",children:"The Flask Mega-Tutorial Part III: Web Forms"})}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"This notes will only provide brief description specific to the mini project 2."}),"\n",(0,t.jsx)(i.h2,{id:"imports",children:"Imports"}),"\n",(0,t.jsxs)(i.p,{children:["To use webforms, we need to import ",(0,t.jsx)(i.code,{children:"FlaskForm"})," as well as the different input fields. This is what is done at the top few lines of ",(0,t.jsx)(i.code,{children:"app/forms.py"}),"."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"from flask_wtf import FlaskForm\nfrom wtforms import StringField, PasswordField, BooleanField, SubmitField, SelectMultipleField, IntegerField, HiddenField\nfrom wtforms.validators import DataRequired, ValidationError, EqualTo\n"})}),"\n",(0,t.jsx)(i.h2,{id:"creating-flaskform",children:"Creating FlaskForm"}),"\n",(0,t.jsxs)(i.p,{children:["To create a webform, we need to define a class of ",(0,t.jsx)(i.code,{children:"FlaskForm"})," instance."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"class CreateQuestionForm(FlaskForm):\n\texpression = StringField('Math Expression',\n                             validators=[DataRequired()])\n\tassign_to = SelectMultipleField('Send To',\n                                    validators=[DataRequired()])\n\tsubmit = SubmitField('Submit')\n"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["In this form to create questions, we have one input field ",(0,t.jsx)(i.code,{children:"expression"})," which expects a ",(0,t.jsx)(i.code,{children:"String"}),". The label of this input field is 'Math Expression'. We can specify ",(0,t.jsx)(i.code,{children:"validators"})," for Python to check the validity of the input data."]}),"\n",(0,t.jsxs)(i.li,{children:["The field ",(0,t.jsx)(i.code,{children:"assign_to"})," is a ",(0,t.jsx)(i.code,{children:"SelectMultipleField"})," which allows multiple select of users to assign the challenge to."]}),"\n",(0,t.jsxs)(i.li,{children:["The last field is ",(0,t.jsx)(i.code,{children:"submit"})," which is a Submit button with a label 'Submit'."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"rendering-web-form",children:"Rendering Web Form"}),"\n",(0,t.jsxs)(i.p,{children:["When using Bootstrap's Forms, we can render the form as shown inside ",(0,t.jsx)(i.code,{children:"app/templates/questions.html"}),"."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-html",children:'{% import "bootstrap/wtf.html" as wtf %} ...\n<div class="row">\n  <div class="col-md-4">{{ wtf.quick_form(form)}}</div>\n</div>\n'})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["First, we have to import ",(0,t.jsx)(i.code,{children:"bootstrap/wtf.html"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Next, we can use ",(0,t.jsx)(i.code,{children:"{{ wtf.quick_form(form) }}"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["The argument inside ",(0,t.jsx)(i.code,{children:"wtf.quick_form()"})," is a variable that is passed on when rendering the template. This can be found inside ",(0,t.jsx)(i.code,{children:"app/routes.py"})," under the function definition for ",(0,t.jsx)(i.code,{children:"questions()"}),"."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"def questions():\n\t...\n\tform = CreateQuestionForm()\n\t...\n\treturn render_template('questions.html',\n                           title='Questions',\n\t\t\t\t\t\t\tuser=current_user,\n\t\t\t\t\t\t\tquestions=questions,\n\t\t\t\t\t\t\tform=form)\n"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["We must first create the ",(0,t.jsx)(i.code,{children:"form"})," as ",(0,t.jsx)(i.code,{children:"CreateQuestionForm"})," object instance which is imported from ",(0,t.jsx)(i.code,{children:"app/forms.py"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["In the last line and last argument of ",(0,t.jsx)(i.code,{children:"render_template()"}),", we have ",(0,t.jsx)(i.code,{children:"form=form"})," where we pass on the ",(0,t.jsx)(i.code,{children:"CreateQuestionForm"})," object instance that we create previously into the a keyword argument called ",(0,t.jsx)(i.code,{children:"form"}),". This name ",(0,t.jsx)(i.code,{children:"form"})," (the left hand side of the equal sign) is the one that is accessible inside ",(0,t.jsx)(i.code,{children:"questions.html"})," in ",(0,t.jsx)(i.code,{children:"wtf.quick_form(form)"}),"."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"hidden-fields",children:"Hidden Fields"}),"\n",(0,t.jsxs)(i.p,{children:["Another example of form is used in ",(0,t.jsx)(i.code,{children:"ChallengeAnswerForm"})," where a user submit an answer from ",(0,t.jsx)(i.code,{children:"challenge.html"})," page. Inside ",(0,t.jsx)(i.code,{children:"app/forms.py"})," we see:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"class ChallengeAnswerForm(FlaskForm):\n\tchallenge_id = HiddenField('Challenge ID')\n\tanswer = StringField('Answer', validators=[DataRequired()])\n\telapsed_time = HiddenField('Elapsed Time')\n\tsubmit = SubmitField('Submit')\n"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["The only input field here are ",(0,t.jsx)(i.code,{children:"answer"})," which is a ",(0,t.jsx)(i.code,{children:"StringField"})," and ",(0,t.jsx)(i.code,{children:"submit"})," which is ",(0,t.jsx)(i.code,{children:"SubmitField"})," button."]}),"\n",(0,t.jsxs)(i.li,{children:["Both ",(0,t.jsx)(i.code,{children:"challenge_id"})," and ",(0,t.jsx)(i.code,{children:"elapsed_time"})," are ",(0,t.jsx)(i.code,{children:"HiddenField"})," because these two will be generated by the script rather than entered by the user."]}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:['When a user click the "Show/Hide" button to reveal the question, a callback is executed in ',(0,t.jsx)(i.code,{children:"clientlibrary.js"}),". Recall that we produced ",(0,t.jsx)(i.code,{children:"clientlibrary.js"})," using Transcrypt by compiling the Python's script ",(0,t.jsx)(i.code,{children:"clientlibrary.py"}),'. Everytime the "Show/Hide" button is clicked, it calls ',(0,t.jsx)(i.code,{children:"start_time(question_id)"})," function."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"class Records:\n\tdef __init__(self):\n\t\tself.items = {}\n\n\tdef start_timer(self, question_id):\n\t\tself.items[question_id] = AnswerTime(question_id)\n"})}),"\n",(0,t.jsxs)(i.p,{children:['When the user click the "Submit" button, it will call the ',(0,t.jsx)(i.code,{children:"stop_timer(form_id, question_id)"})," function."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:'    def stop_timer(self, form_id, question_id):\n        self.items[question_id].stop()\n        curform = document.getElementById(f"form-{form_id:}")\n        answer = curform.elements["answer"].value\n        curform.elements["challenge_id"].value = str(question_id)\n        curform.elements["elapsed_time"].value = self.items[question_id].elapsedtime\n        curform.submit()\n'})}),"\n",(0,t.jsxs)(i.p,{children:["This function stop the timer and obtain data the ",(0,t.jsx)(i.code,{children:"answer"})," input text box. The function then fills in the value of the two ",(0,t.jsx)(i.code,{children:"HiddenField"}),": ",(0,t.jsx)(i.code,{children:"challenge_id"})," and ",(0,t.jsx)(i.code,{children:"elapsed_time"}),". Then the function submit the form to the server."]}),"\n",(0,t.jsxs)(i.p,{children:["The way this form is implemented in ",(0,t.jsx)(i.code,{children:"templates/challenges.html"})," is shown in the code below."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-html",children:'<form id="form-{{ idx }}" action="" method="post" novalidate>\n          {{ form.hidden_tag() }}\n          <div>\n          {{ form.answer(size=32) }}\n          <button type="button" class="btn btn-primary"\n            onclick="library.records.stop_timer({{ idx }}, {{ challenges[idx].id }})">Submit</button>\n        </form>\n'})}),"\n",(0,t.jsxs)(i.p,{children:["Notice that we only implement the ",(0,t.jsx)(i.code,{children:"answer"})," field with ",(0,t.jsx)(i.code,{children:"{{ form.answer() }}"}),". Next, we create a button and bind the ",(0,t.jsx)(i.code,{children:"onclick"})," event to our ",(0,t.jsx)(i.code,{children:"stop_timer()"})," function inside our ",(0,t.jsx)(i.code,{children:"clientlibrary.js"})," script."]}),"\n",(0,t.jsxs)(i.p,{children:["Notice that we have renamed our ",(0,t.jsx)(i.code,{children:"clientlibrary.js"})," as ",(0,t.jsx)(i.code,{children:"library"})," in our ",(0,t.jsx)(i.code,{children:"templates/base.html"}),"."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-html",children:'<script type="module">\n  import * as library from "/static/__target__/clientlibrary.js";\n  window.library = library;\n<\/script>\n'})}),"\n",(0,t.jsxs)(i.p,{children:["Moreover, inside our ",(0,t.jsx)(i.code,{children:"clientlibrary.py"})," we create an object called ",(0,t.jsx)(i.code,{children:"records"}),". You can find in the last line the following code:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"records = Records()\n"})}),"\n",(0,t.jsxs)(i.p,{children:["With this, we can call the method inside the ",(0,t.jsx)(i.code,{children:"Records"})," class using ",(0,t.jsx)(i.code,{children:"library.records.stop_timer()"}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-ii-templates",children:"The Flask Mega-Tutorial Part II: Templates"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-iii-web-forms",children:"The Flask Mega-Tutorial Part III: Web Forms"})}),"\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://transcrypt.org/documentation",children:"Transcrypt Documentation"})}),"\n"]})]})}function m(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);